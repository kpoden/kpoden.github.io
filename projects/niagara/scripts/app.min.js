function scrollFix(){document.addEventListener("DOMContentLoaded",function(e){var t=".header,.mission,.history,.work,.news";window.addEventListener("load",function(){var e=document.querySelectorAll(t),n=window.innerHeight;e.forEach(function(e){var t=e.offsetHeight,o=n-t;e.classList.contains("history")&&(o=n/2-t),e.style.top=o<0?o+"px":"0"})}),window.addEventListener("resize",function(){var e=document.querySelectorAll(t),n=window.innerHeight;e.forEach(function(e){var t=e.offsetHeight,o=n-t;e.classList.contains("history")&&(o=n/2-t),e.style.top=o<0?o+"px":"0"})})})}function smoothScroll(){const o=document.querySelectorAll(".n-block");window.addEventListener("scroll",()=>{for(let e=0;e<o.length;e++){var t=o[e].getBoundingClientRect();0<=t.top&&(t=t.top-window.innerHeight+t.height,window.scrollTo({top:t,behavior:"smooth"}))}})}function isElementInViewport(e){e=e.getBoundingClientRect();return 0<e.bottom&&0<e.right&&e.left<(window.innerWidth||document.documentElement.clientWidth)&&e.top<(window.innerHeight||document.documentElement.clientHeight)}function onePunch(){var e=document.querySelector(".mission"),t=document.querySelector(".product"),o=document.querySelector(".geography"),n=document.querySelector(".news"),s=document.querySelector(".work"),c=document.querySelector(".history");(sections=[]).push(e),sections.push(s),(sections_half=[]).push(n),sections_half.push(t),sections_half.push(o),sections_half.push(c),sections_half.forEach(function(t){window.addEventListener("scroll",()=>{var e;t.getBoundingClientRect().top<(window.innerHeight||document.documentElement.clientHeight)/2?(console.log("half"),e=document.documentElement.scrollTop+window.innerHeight/2,t.classList.contains("scrolled")||(gsap.to(window,{duration:1,scrollTo:e}),t.classList.add("scrolled"))):t.classList.remove("scrolled")})}),sections.forEach(function(t){window.addEventListener("scroll",()=>{var e=t.getBoundingClientRect();console.log(e),isElementInViewport(t)?(console.log("section is in viewport"),e=document.documentElement.scrollTop+window.innerHeight,console.log(e),t.classList.contains("scrolled")||(gsap.to(window,{duration:1,scrollTo:e}),t.classList.add("scrolled"))):t.classList.remove("scrolled")})})}function scrollUpAppear(){window.addEventListener("scroll",function(){var e=document.getElementById("scroll-up");500<window.scrollY?e.classList.add("scroll-up__appear"):e.classList.remove("scroll-up__appear")})}function orderDisappear(){const e=document.querySelector(".order");window.addEventListener("scroll",()=>{e.getBoundingClientRect().top<100?e.classList.add("unvisOrder"):e.classList.remove("unvisOrder")})}function parallex(){135<window.pageYOffset-$(".header").height()?$(".header").css({opacity:0}):$(".header").css({opacity:1})}function scrollBlocks(){const t=document.querySelector(".year__num");var o=document.querySelectorAll(".events__item");const n=window.innerHeight||document.documentElement.clientHeight;for(let e=0;e<o.length;e++){const s=o[e];s.classList.add("hiddenBlock"),document.addEventListener("scroll",()=>{s.getBoundingClientRect().top-100<n/2+150?(s.classList.remove("hiddenBlock"),s.classList.add("visibleBlock")):(s.classList.add("hiddenBlock"),s.classList.remove("visibleBlock"));var e=document.querySelectorAll(".visibleBlock");0<e.length&&(e=parseFloat(e[e.length-1].dataset.year),parseFloat(t.innerText),t.innerText=e)})}}function onEntry(e){e.forEach(e=>{e.isIntersecting&&(e.target.classList.add("element-show"),counters())})}$(document).ready(function(){window.onbeforeunload=function(){window.scrollTo(0,0)},setTimeout(function(){window.scrollTo(0,0),document.body.scrollTop=0,gsap.to(window,{duration:1,scrollTo:{y:"body"}})},1)}),scrollFix(),onePunch(),scrollUpAppear(),orderDisappear(),window.addEventListener("scroll",parallex),scrollBlocks();let options={threshold:[.1]},observer=new IntersectionObserver(onEntry,options),elements=document.querySelectorAll(".element-animation");for(let e of elements)observer.observe(e);function counters(){const o=document.querySelectorAll(".counter");jQuery(function(e){"use strict";var t=window.counterUp.default;o.forEach(e=>{t(e,{duration:1e3,delay:5})})})}function pecsChange(){var e=parseInt(localStorage.getItem("visitCount"))||0,t=(e++,localStorage.setItem("visitCount",e),e%8),o=document.querySelectorAll(".header-top__bg");for(let e=0;e<o.length;e++)o[e].classList.add("hidden"),e==t&&o[e].classList.remove("hidden")}function videoAppear(){const e=document.querySelector(".header-top__bg-vid"),t=document.querySelector(".pecs");setTimeout(function(){t.classList.add("pecs_disappear"),e.play()},4e3)}function lang(){const e=document.querySelector(".n-lang");e.addEventListener("click",()=>{e.classList.toggle("en")})}function prodMenu(){const o=document.querySelectorAll(".products-menu__item"),n=document.querySelectorAll(".products-list__item");o.forEach(e=>{e.addEventListener("click",e=>{let t=(e=e.target).getAttribute("data-menu");o.forEach(e=>e.classList.remove("products-menu__item--active")),e.classList.add("products-menu__item--active"),n.forEach(e=>{e.classList.add("hidden"),e.getAttribute("data-type")===t&&e.classList.remove("hidden")})})})}function worksCat(){const o=document.querySelectorAll(".work-form__cat"),n=document.querySelectorAll(".work-form__list");o.forEach(e=>{e.addEventListener("click",e=>{o.forEach(e=>e.classList.remove("work-form__cat--active")),(e=e.target).classList.add("work-form__cat--active");const t=e.getAttribute("data-work-cat");n.forEach(e=>{e.classList.add("hidden"),e.getAttribute("data-work-list")==t&&e.classList.remove("hidden")})})})}function newsSpoiler(){const e=document.querySelectorAll(".news-item"),t=document.querySelector(".news__spoiler");t.addEventListener("click",()=>{t.classList.contains("expanded")?e.forEach(e=>{e.classList.contains("show")&&(e.classList.remove("show"),e.classList.add("hidden"),t.classList.remove("expanded"),t.innerText="Смотреть еще")}):e.forEach(e=>{e.classList.contains("hidden")&&(e.classList.remove("hidden"),e.classList.add("show"),t.classList.add("expanded"),t.innerText="Скрыть")})})}pecsChange(),lang(),prodMenu(),worksCat(),newsSpoiler();let navLinks=document.querySelectorAll(".n-menu__item");navLinks.forEach(e=>e.addEventListener("click",e=>{e.preventDefault()})),document.getElementById("menu-production").addEventListener("click",()=>{gsap.to(window,{duration:1,scrollTo:{y:".product"}})}),document.getElementById("menu-about").addEventListener("click",()=>{gsap.to(window,{duration:.5,scrollTo:{y:".mission"}})}),document.getElementById("menu-work").addEventListener("click",()=>{gsap.to(window,{duration:1,scrollTo:{y:".work"}})}),document.getElementById("menu-contacts").addEventListener("click",()=>{gsap.to(window,{duration:1,scrollTo:{y:".footer"}})}),document.getElementById("scroll-up").addEventListener("click",()=>{gsap.to(window,{duration:1,scrollTo:{y:"body"}})}),gsap.from(".order",{scrollTrigger:".order",y:"50px",opacity:0}),gsap.to(".order",{scrollTrigger:".order",y:"0",opacity:"1"});class Modal{constructor(e,t){this.modal=document.getElementById(e),this.closeButton=this.modal.querySelector(".modal__close"),this.modalTrigger=document.querySelectorAll(t),this.overlay=document.querySelector(".overlay-dark"),this.isOpen=!1,this.closeButton.addEventListener("click",()=>this.close()),this.overlay.addEventListener("click",()=>this.close()),document.addEventListener("keydown",e=>{"Escape"===e.key&&this.isOpen&&this.close()})}open(){this.modal.classList.add("opened-modal"),this.overlay.classList.add("overlay--shown"),this.isOpen=!0}close(){this.modal.classList.remove("opened-modal"),this.overlay.classList.remove("overlay--shown"),this.isOpen=!1}init(){this.modalTrigger.forEach(e=>e.addEventListener("click",()=>{this.open()}))}}const modalNews=new Modal("modal-news",".modal-trigger"),modalProd=(modalNews.init(),new Modal("modal-prod",".modal-trigger-prod"));modalProd.init();class Product{constructor(e){this.chooseFlav=document.querySelectorAll(".flavours__item"),this.chooseVolIcon=document.querySelector(".prod-switch"),this.chooseVolSwitch=document.querySelector(".prod-switch__switch")}chooseFlavor(){this.chooseFlav.forEach(e=>e.addEventListener("click",()=>{this.chooseFlav.forEach(e=>e.classList.remove("flavours--active")),e.classList.add("flavours--active")}))}chooseVol(){this.chooseVolIcon.addEventListener("click",()=>{this.chooseVolSwitch.classList.toggle("switched")})}}const td=new Product("td");td.chooseFlavor(),td.chooseVol();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
