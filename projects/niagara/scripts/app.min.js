function scrollUpAppear(){window.addEventListener("scroll",function(){var e=document.getElementById("scroll-up");500<window.scrollY?e.classList.add("scroll-up__appear"):e.classList.remove("scroll-up__appear")})}function orderDisappear(){const e=document.querySelector(".order");window.addEventListener("scroll",()=>{e.getBoundingClientRect().top<100?e.classList.add("unvisOrder"):e.classList.remove("unvisOrder")})}function parallex(){135<window.pageYOffset-$(".header").height()?$(".header").css({opacity:0}):$(".header").css({opacity:1})}function fixBlocks(){window.addEventListener("scroll",function(){ypos=window.pageYOffset;var e,t,o=document.querySelector(".header"),s=document.querySelector(".product"),n=document.querySelector(".history"),l=document.querySelector(".geography"),c=document.querySelector(".work"),r=document.querySelector(".news"),i=document.querySelector(".footer");0<ypos&&ypos<900&&(e=0-ypos,o.style.position="fixed",o.style.padding="55px 65px 55px",s.style.top="876px"),900<ypos&&(o.style.position="relative",s.style.top="0"),4916<ypos&&(e=.5*(4916-ypos),t=-4916+ypos,n.style.position="relative",n.style.top=t+"px",l.style.top=e+"px",l.style.marginBottom=e+"px",l.style.position="relative"),5784<ypos&&(n.style.top="auto"),6545<ypos&&(l.style.top="-814px",l.style.marginBottom="-814px"),6580<ypos&&(e=6580-ypos,344<(t=-6580+ypos)&&(t=344),c.style.position="relative",c.style.top=t+"px",r.style.top=e+"px",r.style.marginBottom=e+"px",r.style.position="relative"),7030<ypos&&(e=7030-ypos,-100<(t=-7030+ypos-450)&&(t=-100,r.style.marginBottom="-800px"),r.style.top=t+"px",i.style.top=e+"px",i.style.marginBottom=e+"px",i.style.position="relative")})}function sectionsFix(){var t=window.innerHeight||document.documentElement.clientHeight,o=document.querySelectorAll(".n-block");for(let e=0;e<2;e++){const s=o[e];s.classList.add("unfixed"),s.style.top=t+"px",document.addEventListener("scroll",()=>{console.log(s.getBoundingClientRect().top),s.getBoundingClientRect().top<5?(s.classList.add("fixedBlock"),s.style.top="0px"):s.classList.remove("fixedBlock")})}}function scrollBlocks(){const t=document.querySelector(".year__num");var o=document.querySelectorAll(".events__item");const s=window.innerHeight||document.documentElement.clientHeight;for(let e=0;e<o.length;e++){const n=o[e];n.classList.add("hiddenBlock"),document.addEventListener("scroll",()=>{n.getBoundingClientRect().top-100<s/2+150?(n.classList.remove("hiddenBlock"),n.classList.add("visibleBlock")):(n.classList.add("hiddenBlock"),n.classList.remove("visibleBlock"));var e=document.querySelectorAll(".visibleBlock");0<e.length&&(e=parseFloat(e[e.length-1].dataset.year),parseFloat(t.innerText),t.innerText=e+" г")})}}function onEntry(e){e.forEach(e=>{e.isIntersecting&&(e.target.classList.add("element-show"),counters())})}$(document).ready(function(){setTimeout(function(){window.scrollTo(0,0)},1)}),scrollUpAppear(),orderDisappear(),window.addEventListener("scroll",parallex),scrollBlocks();let options={threshold:[.1]},observer=new IntersectionObserver(onEntry,options),elements=document.querySelectorAll(".element-animation");for(let e of elements)observer.observe(e);function counters(){const o=document.querySelectorAll(".counter");jQuery(function(e){"use strict";var t=window.counterUp.default;o.forEach(e=>{t(e,{duration:1e3,delay:5})})})}function pecsChange(){var e=parseInt(localStorage.getItem("visitCount"))||0,t=(e++,localStorage.setItem("visitCount",e),e%8),o=document.querySelectorAll(".header-top__bg");for(let e=0;e<o.length;e++)o[e].classList.add("hidden"),e==t&&o[e].classList.remove("hidden")}function videoAppear(){const e=document.querySelector(".header-top__bg-vid"),t=document.querySelector(".pecs");setTimeout(function(){t.classList.add("pecs_disappear"),e.play()},4e3)}function lang(){const e=document.querySelector(".n-lang");e.addEventListener("click",()=>{e.classList.toggle("en")})}function prodMenu(){const o=document.querySelectorAll(".products-menu__item"),s=document.querySelectorAll(".products-list__item");o.forEach(e=>{e.addEventListener("click",e=>{let t=(e=e.target).getAttribute("data-menu");o.forEach(e=>e.classList.remove("products-menu__item--active")),e.classList.add("products-menu__item--active"),s.forEach(e=>{e.classList.add("hidden"),e.getAttribute("data-type")===t&&e.classList.remove("hidden")})})})}function worksCat(){const o=document.querySelectorAll(".work-form__cat"),s=document.querySelectorAll(".work-form__list");o.forEach(e=>{e.addEventListener("click",e=>{o.forEach(e=>e.classList.remove("work-form__cat--active")),(e=e.target).classList.add("work-form__cat--active");const t=e.getAttribute("data-work-cat");s.forEach(e=>{e.classList.add("hidden"),e.getAttribute("data-work-list")==t&&e.classList.remove("hidden")})})})}function newsSpoiler(){const e=document.querySelectorAll(".news-item"),t=document.querySelector(".news__spoiler");t.addEventListener("click",()=>{t.classList.contains("expanded")?e.forEach(e=>{e.classList.contains("show")&&(e.classList.remove("show"),e.classList.add("hidden"),t.classList.remove("expanded"),t.innerText="Смотреть еще")}):e.forEach(e=>{e.classList.contains("hidden")&&(e.classList.remove("hidden"),e.classList.add("show"),t.classList.add("expanded"),t.innerText="Скрыть")})})}pecsChange(),lang(),prodMenu(),worksCat(),newsSpoiler();let navLinks=document.querySelectorAll(".n-menu__item");navLinks.forEach(e=>e.addEventListener("click",e=>{e.preventDefault()})),document.getElementById("menu-production").addEventListener("click",()=>{gsap.to(window,{duration:1,scrollTo:{y:".product"}})}),document.getElementById("menu-about").addEventListener("click",()=>{gsap.to(window,{duration:.5,scrollTo:{y:".mission"}})}),document.getElementById("menu-work").addEventListener("click",()=>{gsap.to(window,{duration:1,scrollTo:{y:".work"}})}),document.getElementById("menu-contacts").addEventListener("click",()=>{gsap.to(window,{duration:1,scrollTo:{y:".footer"}})}),document.getElementById("scroll-up").addEventListener("click",()=>{console.log("su"),gsap.to(window,{duration:1,scrollTo:{y:"body"}})}),gsap.from(".order",{scrollTrigger:".order",y:"50px",opacity:0}),gsap.to(".order",{scrollTrigger:".order",y:"0",opacity:"1"});class Modal{constructor(e,t){this.modal=document.getElementById(e),this.closeButton=this.modal.querySelector(".modal__close"),this.modalTrigger=document.querySelectorAll(t),this.overlay=document.querySelector(".overlay-dark"),this.isOpen=!1,this.closeButton.addEventListener("click",()=>this.close()),this.overlay.addEventListener("click",()=>this.close()),document.addEventListener("keydown",e=>{"Escape"===e.key&&this.isOpen&&this.close()})}open(){this.modal.classList.add("opened-modal"),this.overlay.classList.add("overlay--shown"),this.isOpen=!0}close(){this.modal.classList.remove("opened-modal"),this.overlay.classList.remove("overlay--shown"),this.isOpen=!1}init(){this.modalTrigger.forEach(e=>e.addEventListener("click",()=>{this.open()}))}}const modalNews=new Modal("modal-news",".modal-trigger"),modalProd=(modalNews.init(),new Modal("modal-prod",".modal-trigger-prod"));modalProd.init();class Product{constructor(e){this.chooseFlav=document.querySelectorAll(".flavours__item"),this.chooseVolIcon=document.querySelector(".prod-switch"),this.chooseVolSwitch=document.querySelector(".prod-switch__switch")}chooseFlavor(){this.chooseFlav.forEach(e=>e.addEventListener("click",()=>{this.chooseFlav.forEach(e=>e.classList.remove("flavours--active")),e.classList.add("flavours--active")}))}chooseVol(){this.chooseVolIcon.addEventListener("click",()=>{this.chooseVolSwitch.classList.toggle("switched")})}}const td=new Product("td");td.chooseFlavor(),td.chooseVol();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
