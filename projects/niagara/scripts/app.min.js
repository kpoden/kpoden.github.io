$(document).ready(function(){window.onbeforeunload=function(){window.scrollTo(0,0)},setTimeout(function(){window.scrollTo(0,0),document.body.scrollTop=0,gsap.to(window,{duration:1,scrollTo:{y:"body"}})},1)});class Map{constructor(t,e){this.map=document.querySelector(t),this.countries=document.querySelector(e),this.mapList=document.querySelectorAll("[data-map]"),this.countriesList=document.querySelectorAll("[data-country]"),this.init()}addMapListener(){this.mapList.forEach(t=>{t.addEventListener("mouseover",t=>{t=t.target,this.currentCountry=t.getAttribute("data-map"),this.countriesList.forEach(t=>{var e=t.getAttribute("data-country");this.currentCountry==e&&t.classList.add("underline")})}),t.addEventListener("mouseleave",t=>{this.countriesList.forEach(t=>{t.classList.remove("underline")})})})}addCountriesListener(){this.countriesList.forEach(t=>{t.addEventListener("mouseover",t=>{t=t.target,this.currentCountryName=t.getAttribute("data-country"),this.mapList.forEach(t=>{var e=t.getAttribute("data-map");this.currentCountryName==e&&(t.classList.add("countryStroke"),console.log(t))})}),t.addEventListener("mouseleave",t=>{this.mapList.forEach(t=>{t.classList.remove("countryStroke")})})})}init(){this.addCountriesListener(),this.addMapListener()}}const mapInstance=new Map("#map",".countries__list");class Products{constructor(t,e,o){this.productsData=document.getElementById(t),this.modal=document.getElementById(e),this.bg=document.querySelector(".product-modal__header"),this.productImage=document.querySelector(".prod-display__img img"),this.switchWrap=document.querySelector(".switch-wrap"),this.switchWrap.innerHTML="",this.flavoursChooseDiv=document.querySelector(".flavours__choose"),this.thirdWindow=document.querySelector(".prod-tiger"),this.currentVol="0",this.currentProd=o,this.subtitleText=document.querySelector(".pm-header__title-sub"),this.logoImage=document.querySelector(".pm-header__title-main img"),this.pmStarBlock=document.querySelector(".prod-display__star"),this.pmStarBlock.classList.add("hidden"),this.pmTextWrap=document.querySelector(".pm-star__text"),this.pmAdvSection=document.querySelector(".pm-adv"),this.advWrap=document.querySelector(".pm-adv__wrapper"),this.secondWindow=document.querySelector(".prod-info"),this.secondWindow.classList.add("hidden"),this.secWindowImgElement=document.querySelector(".prod-info__bg"),this.secWindowTextWrap=document.querySelector(".prod-info__text"),this.pmDecorBgWrap=document.querySelector(".pm-header__decorbg"),this.pmDecorBgWrap.classList.add("hidden"),this.pmDecorBg=document.querySelector(".pm-header__decorbg img"),this.pmDecorBg.src="",this.pmPlashka=document.querySelector(".pm-header__plashka img"),this.pmPlashka.src="",this.templateWrap=document.querySelector(".prod-template"),this.templateWrap.innerHTML="",this.templateWrap.classList.add("hidden"),this.init()}scrollFix(){var e=".product-modal__header,.pm-adv,.prod-info,.prod-tiger,.prod-template",t=document.querySelectorAll(e),o=window.innerHeight;const s=[],i=(t.forEach(t=>{t.classList.contains("hidden")||s.push(t)}),s[s.length-1].getBoundingClientRect().height);var n=o-i;0<n&&(this.modal.style.paddingBottom=n+"px"),window.addEventListener("resize",function(){var t=document.getElementById("modal-prod"),e=window.innerHeight-i;0<e&&(t.style.paddingBottom=e+"px")}),t.forEach(function(t){var e=t.offsetHeight,e=o-e;t.style.top=e<0?e+"px":"0"}),window.addEventListener("resize",function(){var t=document.querySelectorAll(e),o=window.innerHeight;t.forEach(function(t){var e=t.offsetHeight,e=o-e;t.style.top=e<0?e+"px":"0"})})}initSticky(){this.bg.classList.add("pm-sticky"),this.pmAdvSection.classList.add("pm-sticky"),this.secondWindow.classList.add("pm-sticky"),this.thirdWindow.classList.add("pm-sticky"),this.templateWrap.classList.add("pm-sticky")}posWindow(){var t=(window.pageYOffset||document.documentElement.scrollTop)-(document.documentElement.clientTop||0);this.modal.style.top=100+t+"px",this.initSticky()}getProductInfo(t){this.productName=t,this.products=JSON.parse(this.productsData.innerHTML).products;for(let t=0;t<this.products.length;t++){var e=this.products[t];e.name===this.productName&&(this.product=e)}}createSecondWindow(){var t=this.secWindowImgElement.querySelector("source"),e=this.secWindowImgElement.querySelector(".prod-info__img");this.product.secondWindow&&!this.product.secondWindow[0].template?(this.secondWindow.classList.remove("hidden"),this.secWindowTextWrap.classList.remove("right-aligned"),this.secWindowTextWrap.classList.remove("bottom-aligned"),"right"==this.product.secondWindow[0].align&&this.secWindowTextWrap.classList.add("right-aligned"),"bottom"==this.product.secondWindow[0].align&&this.secWindowTextWrap.classList.add("bottom-aligned"),"wider"==this.product.secondWindow[0].width&&this.secWindowTextWrap.classList.add("wider"),t.srcset=this.product.secondWindow[0].imageMob,e.src=this.product.secondWindow[0].image,this.secWindowTextWrap.innerHTML=this.product.secondWindow[0].content):this.product.secondWindow[0].template&&(this.templateWrap.classList.remove("hidden"),t=document.querySelector(this.product.secondWindow[0].template).innerHTML,this.templateWrap.innerHTML=t)}createThirdWindow(){this.product.thirdWindow?(this.thirdWindow.classList.remove("hidden"),this.thirdWindow.classList.add("shown")):(this.thirdWindow.classList.remove("shown"),this.thirdWindow.classList.add("hidden"))}createAdvantages(){this.advWrap.innerHTML="",this.product.adv&&this.product.adv.forEach(t=>{var e=document.createElement("div"),o=(e.classList.add("pm-adv__item"),document.createElement("div")),s=(o.classList.add("pm-adv__img"),document.createElement("img")),s=(s.src=t.icon,s.alt="",o.appendChild(s),document.createElement("h3")),i=(s.classList.add("pm-adv__title"),s.textContent=t.title,document.createElement("p"));i.classList.add("pm-adv__text"),i.innerHTML=t.text,e.appendChild(o),e.appendChild(s),e.appendChild(i),this.advWrap.appendChild(e)})}initMainWindow(){this.product.decorbg&&(this.pmDecorBgWrap.classList.remove("hidden"),this.pmDecorBg.src=this.product.decorbg),this.productImage.src=this.product.volumes[this.currentVol].flavors[0].image,this.bg.style.background=this.product.volumes[this.currentVol].flavors[0].bgcolor,this.subtitleText.innerHTML=this.product.subtitle,this.logoImage.src=this.product.logo,this.showNote()}showNote(){this.product.note&&(this.pmStarBlock.classList.remove("hidden"),this.pmTextWrap.textContent=this.product.note)}initFlavorsList(){this.flavoursChooseDiv.innerHTML="";var t=document.querySelector(".flavours__quant"),e=(this.flavorList=[],this.product.volumes[this.currentVol].flavors.forEach(t=>{this.flavorList.push(t)}),this.flavorList.length);t.innerHTML=1==e?e+" вкус:":1<e&&e<5?e+" вкуса:":e+" вкусов:";for(let t=0;t<this.flavorList.length;t++){var o=this.flavorList[t],s=document.createElement("div"),i=(s.classList.add("flavours__item"),s.dataset.name=o.name,0==t&&s.classList.add("flavours--active"),document.createElement("div")),n=(i.classList.add("flavours__img-wrap"),document.createElement("img")),n=(n.classList.add("flavours__img"),n.src=o.icon,n.alt=o.title,i.appendChild(n),document.createElement("span"));n.classList.add("flavours__name"),n.textContent=o.title,s.appendChild(i),s.appendChild(n),this.flavoursChooseDiv.appendChild(s)}this.flavours=document.querySelectorAll(".flavours__item"),this.listenFlavors()}createSwitch(){var t=document.createElement("div"),e=(t.classList.add("prod-display__switch","prod-switch","vol-quant-"+this.volQuantity),this.switchWrap.appendChild(t),document.createElement("div")),o=(e.classList.add("prod-switch__wrap"),t.appendChild(e),document.createElement("span")),s=(o.classList.add("prod-switch__switch"),e.appendChild(o),document.createElement("div")),i=(s.classList.add("prod-switch__vol"),e.appendChild(s),document.createElement("span"));i.textContent=this.sizes[0],s.appendChild(i),2!=this.volQuantity&&3!=this.volQuantity||((s=document.createElement("div")).classList.add("prod-switch__vol"),e.appendChild(s),(i=document.createElement("span")).textContent=this.sizes[1],s.appendChild(i)),3==this.volQuantity&&((s=document.createElement("div")).classList.add("prod-switch__vol"),e.appendChild(s),(i=document.createElement("span")).textContent=this.sizes[2],s.appendChild(i)),this.chooseVolIcon=t,this.chooseVolSwitch=o}getVolQuantity(){this.sizes=[],this.product.volumes.forEach(t=>{this.sizes.push(t.size)}),this.volQuantity=this.sizes.length}getCurrentFlavor(){this.product.volumes[this.currentVol].flavors.forEach(t=>{t.name==this.activeFlavour&&(t.logo&&(this.logoImage.src=t.logo),t.plashka&&(this.pmPlashka.src=t.plashka),this.bg.style.background=t.bgcolor,this.productImage.src=t.image)})}addListenerVolume(){this.chooseVolIcon.addEventListener("click",this.getVolume.bind(this))}getVolume(){this.chooseVolIcon.classList.contains("vol-quant-3")&&(this.chooseVolSwitch.classList.contains("switched")?(this.chooseVolSwitch.classList.remove("switched"),this.chooseVolSwitch.classList.add("switched2"),this.chooseVolIcon.setAttribute("data-curr-vol","2"),this.currentVol="2"):this.chooseVolSwitch.classList.contains("switched2")?(this.chooseVolSwitch.classList.remove("switched"),this.chooseVolSwitch.classList.remove("switched2"),this.chooseVolIcon.setAttribute("data-curr-vol","0"),this.currentVol="0"):(this.chooseVolSwitch.classList.add("switched"),this.chooseVolIcon.setAttribute("data-curr-vol","1"),this.currentVol="1")),this.chooseVolIcon.classList.contains("vol-quant-2")&&(this.chooseVolSwitch.classList.contains("switched")?(this.chooseVolIcon.setAttribute("data-curr-vol","0"),this.chooseVolSwitch.classList.remove("switched"),this.currentVol="0"):(this.chooseVolIcon.setAttribute("data-curr-vol","1"),this.chooseVolSwitch.classList.add("switched"),this.currentVol="1")),this.initFlavorsList(),this.initMainWindow()}listenFlavors(){this.activeFlavour=this.flavours[0].getAttribute("data-name"),this.getCurrentFlavor(),this.flavours.forEach(t=>{t.addEventListener("click",t=>{this.flavours.forEach(t=>{t.classList.remove("flavours--active")}),this.activeFlavour=t.target.closest(".flavours__item").getAttribute("data-name"),this.activeFlavorIcon=t.target.closest(".flavours__item"),this.activeFlavorIcon.classList.add("flavours--active"),this.getCurrentFlavor()})})}changeWindow(t){this.getProductInfo(t),this.posWindow(),this.initMainWindow(),this.createAdvantages(),this.createSecondWindow(),this.createThirdWindow(),this.getVolQuantity(),this.createSwitch(),this.addListenerVolume(),this.initFlavorsList(),this.scrollFix()}init(){this.changeWindow(this.currentProd)}}const productList=document.querySelectorAll(".products-list__item"),switchWrap=document.querySelector(".switch-wrap");function productTextAppear(){var t=document.querySelector(".pm-star__wrap");const e=document.querySelector(".pm-star__text");t.addEventListener("click",function(t){e.classList.toggle("pm-text--showed")})}function scrollFix(){document.addEventListener("DOMContentLoaded",function(t){var e=".header,.mission,.history,.work,.news";const o=document.querySelector(".news");var s=document.querySelector(".news__spoiler");window.addEventListener("load",function(){var t=document.querySelectorAll(e),s=window.innerHeight;t.forEach(function(t){var e=t.offsetHeight,o=s-e;t.classList.contains("history")&&(o=s/2-e),t.style.top=o<0?o+"px":"0"})}),window.addEventListener("resize",function(){var t=document.querySelectorAll(e),s=window.innerHeight;t.forEach(function(t){var e=t.offsetHeight,o=s-e;t.classList.contains("history")&&(o=s/2-e),t.style.top=o<0?o+"px":"0"})}),s.addEventListener("click",function(t){var e=window.innerHeight-o.offsetHeight;o.style.top=e<0?e+"px":"0"})})}function smoothScroll(){const o=document.querySelectorAll(".n-block");window.addEventListener("scroll",()=>{for(let t=0;t<o.length;t++){var e=o[t].getBoundingClientRect();0<=e.top&&(e=e.top-window.innerHeight+e.height,window.scrollTo({top:e,behavior:"smooth"}))}})}function isElementInViewport(t){t=t.getBoundingClientRect();return 0<t.bottom&&0<t.right&&t.left<(window.innerWidth||document.documentElement.clientWidth)&&t.top<(window.innerHeight||document.documentElement.clientHeight)}function onePunch(){var t=document.querySelector(".mission"),e=document.querySelector(".product"),o=document.querySelector(".geography"),s=document.querySelector(".news"),i=document.querySelector(".work"),n=document.querySelector(".history"),c=document.querySelector(".footer"),r=[],t=(r.push(t),r.push(i),[]);t.push(s),t.push(e),t.push(o),t.push(n),t.push(c);let d,a;t.forEach(function(s){d=function(){var t,e,o;t=s,o=document.querySelector(".n-menu"),t.getBoundingClientRect().top<(window.innerHeight||document.documentElement.clientHeight)/1.1?(e=document.documentElement.scrollTop+window.innerHeight/1.1,t.classList.contains("scrolled")||(o.classList.contains("nav-clicked")||gsap.to(window,{duration:1,scrollTo:e}),t.classList.add("scrolled"))):t.classList.remove("scrolled")},window.addEventListener("scroll",d)}),r.forEach(function(s){a=function(){var t,e,o;t=s,o=document.querySelector(".n-menu"),t.getBoundingClientRect(),isElementInViewport(t)?(e=document.documentElement.scrollTop+window.innerHeight,t.classList.contains("scrolled")||(o.classList.contains("nav-clicked")||gsap.to(window,{duration:1,scrollTo:e}),t.classList.add("scrolled"))):t.classList.remove("scrolled")},window.addEventListener("scroll",a)})}function scrollUpAppear(){window.addEventListener("scroll",function(){var t=document.getElementById("scroll-up");500<window.scrollY?t.classList.add("scroll-up__appear"):t.classList.remove("scroll-up__appear")})}function orderDisappear(){const t=document.querySelector(".order");window.addEventListener("scroll",()=>{t.getBoundingClientRect().top<100?t.classList.add("unvisOrder"):t.classList.remove("unvisOrder")})}function parallex(){135<window.pageYOffset-$(".header").height()?$(".header").css({opacity:0}):$(".header").css({opacity:1})}function scrollBlocks(){const e=document.querySelector(".year__num");var o=document.querySelectorAll(".events__item");const s=window.innerHeight||document.documentElement.clientHeight;for(let t=0;t<o.length;t++){const i=o[t];i.classList.add("hiddenBlock"),document.addEventListener("scroll",()=>{i.getBoundingClientRect().top-100<s/2+150?(i.classList.remove("hiddenBlock"),i.classList.add("visibleBlock")):(i.classList.add("hiddenBlock"),i.classList.remove("visibleBlock"));var t=document.querySelectorAll(".visibleBlock");0<t.length&&(t=parseFloat(t[t.length-1].dataset.year),parseFloat(e.innerText),e.innerText=t)})}}function onEntry(t){t.forEach(t=>{t.isIntersecting&&(t.target.classList.add("element-show"),counters())})}productList.forEach(o=>{o.addEventListener("click",t=>{var e=o.getAttribute("id");new Products("products","modal-prod",e)})}),productTextAppear(),scrollFix(),onePunch(),scrollUpAppear(),orderDisappear(),window.addEventListener("scroll",parallex),scrollBlocks();let options={threshold:[.1]},observer=new IntersectionObserver(onEntry,options),elements=document.querySelectorAll(".element-animation");for(let t of elements)observer.observe(t);function counters(){const o=document.querySelectorAll(".counter");jQuery(function(t){"use strict";var e=window.counterUp.default;o.forEach(t=>{e(t,{duration:1e3,delay:5})})})}function pecsChange(){var t=parseInt(localStorage.getItem("visitCount"))||0,e=(t++,localStorage.setItem("visitCount",t),t%8),o=document.querySelectorAll(".header-top__bg");for(let t=0;t<o.length;t++)o[t].classList.add("hidden"),t==e&&o[t].classList.remove("hidden")}function videoAppear(){const t=document.querySelector(".header-top__bg-vid"),e=document.querySelector(".pecs");setTimeout(function(){e.classList.add("pecs_disappear"),t.play()},4e3)}function lang(){const t=document.querySelector(".n-lang");t.addEventListener("click",()=>{t.classList.toggle("en")})}function prodMenu(){const o=document.querySelectorAll(".products-menu__item"),s=document.querySelectorAll(".products-list__item");o.forEach(t=>{t.addEventListener("click",t=>{let e=(t=t.target).getAttribute("data-menu");o.forEach(t=>t.classList.remove("products-menu__item--active")),t.classList.add("products-menu__item--active"),s.forEach(t=>{t.classList.add("hidden"),t.getAttribute("data-type")===e&&t.classList.remove("hidden")})})})}function worksCat(){const o=document.querySelectorAll(".work-form__cat"),s=document.querySelectorAll(".work-form__list");o.forEach(t=>{t.addEventListener("click",t=>{o.forEach(t=>t.classList.remove("work-form__cat--active")),(t=t.target).classList.add("work-form__cat--active");const e=t.getAttribute("data-work-cat");s.forEach(t=>{t.classList.add("hidden"),t.getAttribute("data-work-list")==e&&t.classList.remove("hidden")})})})}function newsSpoiler(){const t=document.querySelectorAll(".news-item"),e=document.querySelector(".news__spoiler");e.addEventListener("click",()=>{e.classList.contains("expanded")?t.forEach(t=>{t.classList.contains("show")&&(t.classList.remove("show"),t.classList.add("hidden"),e.classList.remove("expanded"),e.innerText="Смотреть еще")}):t.forEach(t=>{t.classList.contains("hidden")&&(t.classList.remove("hidden"),t.classList.add("show"),e.classList.add("expanded"),e.innerText="Скрыть")})})}pecsChange(),lang(),prodMenu(),worksCat(),newsSpoiler();let navLinks=document.querySelectorAll(".n-menu__item");navLinks.forEach(t=>t.addEventListener("click",t=>{t.preventDefault()})),document.getElementById("menu-production").addEventListener("click",()=>{gsap.to(window,{duration:1,scrollTo:{y:".product"}})}),document.getElementById("menu-about").addEventListener("click",()=>{gsap.to(window,{duration:.5,scrollTo:{y:".mission"}})}),document.getElementById("menu-work").addEventListener("click",()=>{gsap.to(window,{duration:1,scrollTo:{y:".work"}})}),document.getElementById("menu-contacts").addEventListener("click",()=>{gsap.to(window,{duration:1,scrollTo:{y:".footer"}})}),document.getElementById("scroll-up").addEventListener("click",()=>{gsap.to(window,{duration:1,scrollTo:{y:"body"}})}),document.querySelector(".pm-header__low").addEventListener("click",()=>{gsap.to(window,{duration:1,scrollTo:{y:".pm-adv"}})}),gsap.from(".order",{scrollTrigger:".order",y:"50px",opacity:0}),gsap.to(".order",{scrollTrigger:".order",y:"0",opacity:"1"});const navLinkList=document.querySelectorAll(".n-menu__item"),navMenuBlock=document.querySelector(".n-menu");navLinkList.forEach(t=>{t.addEventListener("click",()=>{navMenuBlock.classList.add("nav-clicked"),setTimeout(()=>{navMenuBlock.classList.remove("nav-clicked")},1100)})});class Modal{constructor(t,e,o){this.modalId=t,this.modal=document.getElementById(t),this.closeButton=this.modal.querySelector(".modal__close"),this.modalTrigger=document.querySelectorAll(e),this.overlay=document.querySelector(o),this.isOpen=!1,this.scrollUp=document.getElementById("scroll-up"),this.mainSection=document.querySelector("main"),this.closeButton.addEventListener("click",()=>this.close()),this.overlay.addEventListener("click",()=>this.close()),this.productSection=document.querySelector(".product"),this.newsSection=document.querySelector(".news"),document.addEventListener("keydown",t=>{"Escape"===t.key&&this.isOpen&&this.close()})}open(){var t;this.modal.classList.add("opened-modal"),this.overlay.classList.add("overlay--shown"),this.isOpen=!0,this.modal.style.top="100px",this.scrollUp.classList.add("hidden"),this.mainSection.classList.add("fixed_main"),"modal-prod"==this.modalId?(t=this.productSection.getBoundingClientRect().top,this.mainSection.style.top="-"+t+"px"):"modal-news"==this.modalId&&(t=this.newsSection.getBoundingClientRect().top,this.mainSection.style.top="-"+t+"px",console.log(t))}close(){this.modal.classList.remove("opened-modal"),this.modal.style.top="-1000%",this.overlay.classList.remove("overlay--shown"),this.isOpen=!1,this.scrollUp.classList.remove("hidden"),this.mainSection.classList.remove("fixed_main"),this.mainSection.style.top="","modal-prod"==this.modalId?(console.log("prod"),gsap.to(window,{duration:0,scrollTo:{y:".product"}})):"modal-news"==this.modalId&&(console.log("news"),gsap.to(window,{duration:0,scrollTo:{y:".news"}}))}init(){this.modalTrigger.forEach(t=>t.addEventListener("click",()=>{this.open()}))}}const modalNews=new Modal("modal-news",".modal-trigger",".overlay-dark"),modalProd=(modalNews.init(),new Modal("modal-prod",".modal-trigger-prod",".overlay-dark-news"));modalProd.init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
