$(document).ready(function(){window.onbeforeunload=function(){window.scrollTo(0,0)},setTimeout(function(){window.scrollTo(0,0),document.body.scrollTop=0,gsap.to(window,{duration:1,scrollTo:{y:"body"}})},1)});class Products{constructor(t,e,o){this.productsData=document.getElementById(t),this.modal=document.getElementById(e),this.bg=document.querySelector(".product-modal__header"),this.productImage=document.querySelector(".prod-display__img img"),this.chooseVol=document.querySelector(".prod-switch"),this.chooseVolIcon=document.querySelector(".prod-switch"),this.chooseVolSwitch=document.querySelector(".prod-switch__switch"),this.chooseVolSwitch.classList.remove("switched"),this.chooseVolIcon.setAttribute("data-curr-vol","0"),this.flavoursChooseDiv=document.querySelector(".flavours__choose"),this.currentVol="0",this.currentProd=o,this.subtitleText=document.querySelector(".pm-header__title-sub"),this.logoImage=document.querySelector(".pm-header__title-main img"),this.init()}getProductInfo(t){this.productName=t,this.products=JSON.parse(this.productsData.innerHTML).products;for(let t=0;t<this.products.length;t++){var e=this.products[t];e.name===this.productName&&(this.product=e)}}initMainWindow(){this.productImage.src=this.product.volumes[0].flavors[0].image,this.bg.style.background=this.product.volumes[0].flavors[0].bgcolor,this.subtitleText.innerHTML=this.product.subtitle,this.logoImage.src=this.product.logo}initFlavorsList(){this.flavoursChooseDiv.innerHTML="";var t=document.querySelector(".flavours__quant"),e=(this.flavorList=[],this.product.volumes[this.currentVol].flavors.forEach(t=>{this.flavorList.push(t)}),this.flavorList.length);t.innerHTML=e;for(let t=0;t<this.flavorList.length;t++){var o=this.flavorList[t],s=document.createElement("div"),i=(s.classList.add("flavours__item"),s.dataset.name=o.name,0==t&&s.classList.add("flavours--active"),document.createElement("div")),c=(i.classList.add("flavours__img-wrap"),document.createElement("img")),c=(c.classList.add("flavours__img"),c.src=o.icon,c.alt=o.title,i.appendChild(c),document.createElement("span"));c.classList.add("flavours__name"),c.textContent=o.title,s.appendChild(i),s.appendChild(c),this.flavoursChooseDiv.appendChild(s)}this.flavours=document.querySelectorAll(".flavours__item"),console.log(this.flavours),this.listenFlavors()}getCurrentFlavor(){this.product.volumes[this.currentVol].flavors.forEach(t=>{t.name==this.activeFlavour&&(this.bg.style.background=t.bgcolor,this.productImage.src=t.image,console.log(this.productImage.src))})}getVolume(){this.chooseVolIcon.addEventListener("click",()=>{this.chooseVolIcon.classList.contains("vol-quant-3")&&(this.chooseVolSwitch.classList.contains("switched")?(this.chooseVolSwitch.classList.remove("switched"),this.chooseVolSwitch.classList.add("swithed2"),this.chooseVolIcon.setAttribute("data-curr-vol","2"),this.currentVol="2"):this.chooseVolSwitch.classList.contains("swithed2")?(this.chooseVolSwitch.classList.remove("switched"),this.chooseVolSwitch.classList.remove("switched2"),this.chooseVolIcon.setAttribute("data-curr-vol","0"),this.currentVol="0"):(this.chooseVolSwitch.classList.add("switched"),this.chooseVolIcon.setAttribute("data-curr-vol","1"),this.currentVol="1")),this.chooseVolIcon.classList.contains("vol-quant-2")&&(this.chooseVolSwitch.classList.contains("switched")?(this.chooseVolIcon.setAttribute("data-curr-vol","0"),this.chooseVolSwitch.classList.remove("switched"),this.currentVol="0"):(this.chooseVolIcon.setAttribute("data-curr-vol","1"),this.chooseVolSwitch.classList.add("switched"),this.currentVol="1")),this.initMainWindow(),this.initFlavorsList()})}listenFlavors(){this.activeFlavour=this.flavours[0].getAttribute("data-name"),this.getCurrentFlavor(),this.flavours.forEach(t=>{t.addEventListener("click",t=>{this.flavours.forEach(t=>{t.classList.remove("flavours--active")}),this.activeFlavour=t.target.closest(".flavours__item").getAttribute("data-name"),this.activeFlavorIcon=t.target.closest(".flavours__item"),this.activeFlavorIcon.classList.add("flavours--active"),this.getCurrentFlavor()})})}changeWindow(t){this.getProductInfo(t),this.initMainWindow(),this.initFlavorsList()}init(){this.getVolume(),this.changeWindow(this.currentProd)}}const productList=document.querySelectorAll(".products-list__item");function productTextAppear(){var t=document.querySelector(".pm-star__wrap");const e=document.querySelector(".pm-star__text");t.addEventListener("click",function(t){e.classList.toggle("pm-text--showed")})}function scrollFix(){document.addEventListener("DOMContentLoaded",function(t){var e=".header,.mission,.history,.work,.news";window.addEventListener("load",function(){var t=document.querySelectorAll(e),s=window.innerHeight;t.forEach(function(t){var e=t.offsetHeight,o=s-e;t.classList.contains("history")&&(o=s/2-e),t.style.top=o<0?o+"px":"0"})}),window.addEventListener("resize",function(){var t=document.querySelectorAll(e),s=window.innerHeight;t.forEach(function(t){var e=t.offsetHeight,o=s-e;t.classList.contains("history")&&(o=s/2-e),t.style.top=o<0?o+"px":"0"})})})}function smoothScroll(){const o=document.querySelectorAll(".n-block");window.addEventListener("scroll",()=>{for(let t=0;t<o.length;t++){var e=o[t].getBoundingClientRect();0<=e.top&&(e=e.top-window.innerHeight+e.height,window.scrollTo({top:e,behavior:"smooth"}))}})}function isElementInViewport(t){t=t.getBoundingClientRect();return 0<t.bottom&&0<t.right&&t.left<(window.innerWidth||document.documentElement.clientWidth)&&t.top<(window.innerHeight||document.documentElement.clientHeight)}function onePunch(){var t=document.querySelector(".mission"),e=document.querySelector(".product"),o=document.querySelector(".geography"),s=document.querySelector(".news"),i=document.querySelector(".work"),c=document.querySelector(".history"),n=document.querySelector(".footer");(sections=[]).push(t),sections.push(i),(sections_half=[]).push(s),sections_half.push(e),sections_half.push(o),sections_half.push(c),sections_half.push(n),sections_half.forEach(function(e){window.addEventListener("scroll",()=>{var t;e.getBoundingClientRect().top<(window.innerHeight||document.documentElement.clientHeight)/1.1?(t=document.documentElement.scrollTop+window.innerHeight/1.1,e.classList.contains("scrolled")||(gsap.to(window,{duration:1,scrollTo:t}),e.classList.add("scrolled"))):e.classList.remove("scrolled")})}),sections.forEach(function(e){window.addEventListener("scroll",()=>{var t;e.getBoundingClientRect();isElementInViewport(e)?(t=document.documentElement.scrollTop+window.innerHeight,e.classList.contains("scrolled")||(gsap.to(window,{duration:1,scrollTo:t}),e.classList.add("scrolled"))):e.classList.remove("scrolled")})})}function scrollUpAppear(){window.addEventListener("scroll",function(){var t=document.getElementById("scroll-up");500<window.scrollY?t.classList.add("scroll-up__appear"):t.classList.remove("scroll-up__appear")})}function orderDisappear(){const t=document.querySelector(".order");window.addEventListener("scroll",()=>{t.getBoundingClientRect().top<100?t.classList.add("unvisOrder"):t.classList.remove("unvisOrder")})}function parallex(){135<window.pageYOffset-$(".header").height()?$(".header").css({opacity:0}):$(".header").css({opacity:1})}function scrollBlocks(){const e=document.querySelector(".year__num");var o=document.querySelectorAll(".events__item");const s=window.innerHeight||document.documentElement.clientHeight;for(let t=0;t<o.length;t++){const i=o[t];i.classList.add("hiddenBlock"),document.addEventListener("scroll",()=>{i.getBoundingClientRect().top-100<s/2+150?(i.classList.remove("hiddenBlock"),i.classList.add("visibleBlock")):(i.classList.add("hiddenBlock"),i.classList.remove("visibleBlock"));var t=document.querySelectorAll(".visibleBlock");0<t.length&&(t=parseFloat(t[t.length-1].dataset.year),parseFloat(e.innerText),e.innerText=t)})}}function onEntry(t){t.forEach(t=>{t.isIntersecting&&(t.target.classList.add("element-show"),counters())})}productList.forEach(o=>{o.addEventListener("click",t=>{var e=o.getAttribute("id");new Products("products","modal-prod",e)})}),productTextAppear(),scrollUpAppear(),orderDisappear(),window.addEventListener("scroll",parallex),scrollBlocks();let options={threshold:[.1]},observer=new IntersectionObserver(onEntry,options),elements=document.querySelectorAll(".element-animation");for(let t of elements)observer.observe(t);function counters(){const o=document.querySelectorAll(".counter");jQuery(function(t){"use strict";var e=window.counterUp.default;o.forEach(t=>{e(t,{duration:1e3,delay:5})})})}function pecsChange(){var t=parseInt(localStorage.getItem("visitCount"))||0,e=(t++,localStorage.setItem("visitCount",t),t%8),o=document.querySelectorAll(".header-top__bg");for(let t=0;t<o.length;t++)o[t].classList.add("hidden"),t==e&&o[t].classList.remove("hidden")}function videoAppear(){const t=document.querySelector(".header-top__bg-vid"),e=document.querySelector(".pecs");setTimeout(function(){e.classList.add("pecs_disappear"),t.play()},4e3)}function lang(){const t=document.querySelector(".n-lang");t.addEventListener("click",()=>{t.classList.toggle("en")})}function prodMenu(){const o=document.querySelectorAll(".products-menu__item"),s=document.querySelectorAll(".products-list__item");o.forEach(t=>{t.addEventListener("click",t=>{let e=(t=t.target).getAttribute("data-menu");o.forEach(t=>t.classList.remove("products-menu__item--active")),t.classList.add("products-menu__item--active"),s.forEach(t=>{t.classList.add("hidden"),t.getAttribute("data-type")===e&&t.classList.remove("hidden")})})})}function worksCat(){const o=document.querySelectorAll(".work-form__cat"),s=document.querySelectorAll(".work-form__list");o.forEach(t=>{t.addEventListener("click",t=>{o.forEach(t=>t.classList.remove("work-form__cat--active")),(t=t.target).classList.add("work-form__cat--active");const e=t.getAttribute("data-work-cat");s.forEach(t=>{t.classList.add("hidden"),t.getAttribute("data-work-list")==e&&t.classList.remove("hidden")})})})}function newsSpoiler(){const t=document.querySelectorAll(".news-item"),e=document.querySelector(".news__spoiler");e.addEventListener("click",()=>{e.classList.contains("expanded")?t.forEach(t=>{t.classList.contains("show")&&(t.classList.remove("show"),t.classList.add("hidden"),e.classList.remove("expanded"),e.innerText="Смотреть еще")}):t.forEach(t=>{t.classList.contains("hidden")&&(t.classList.remove("hidden"),t.classList.add("show"),e.classList.add("expanded"),e.innerText="Скрыть")})})}pecsChange(),lang(),prodMenu(),worksCat(),newsSpoiler();let navLinks=document.querySelectorAll(".n-menu__item");navLinks.forEach(t=>t.addEventListener("click",t=>{t.preventDefault()})),document.getElementById("menu-production").addEventListener("click",()=>{gsap.to(window,{duration:1,scrollTo:{y:".product"}})}),document.getElementById("menu-about").addEventListener("click",()=>{gsap.to(window,{duration:.5,scrollTo:{y:".mission"}})}),document.getElementById("menu-work").addEventListener("click",()=>{gsap.to(window,{duration:1,scrollTo:{y:".work"}})}),document.getElementById("menu-contacts").addEventListener("click",()=>{gsap.to(window,{duration:1,scrollTo:{y:".footer"}})}),document.getElementById("scroll-up").addEventListener("click",()=>{gsap.to(window,{duration:1,scrollTo:{y:"body"}})}),gsap.from(".order",{scrollTrigger:".order",y:"50px",opacity:0}),gsap.to(".order",{scrollTrigger:".order",y:"0",opacity:"1"});class Modal{constructor(t,e){this.modal=document.getElementById(t),this.closeButton=this.modal.querySelector(".modal__close"),this.modalTrigger=document.querySelectorAll(e),this.overlay=document.querySelector(".overlay-dark"),this.isOpen=!1,this.closeButton.addEventListener("click",()=>this.close()),this.overlay.addEventListener("click",()=>this.close()),document.addEventListener("keydown",t=>{"Escape"===t.key&&this.isOpen&&this.close()})}open(){this.modal.classList.add("opened-modal"),this.overlay.classList.add("overlay--shown"),this.isOpen=!0}close(){this.modal.classList.remove("opened-modal"),this.overlay.classList.remove("overlay--shown"),this.isOpen=!1}init(){this.modalTrigger.forEach(t=>t.addEventListener("click",()=>{this.open()}))}}const modalNews=new Modal("modal-news",".modal-trigger"),modalProd=(modalNews.init(),new Modal("modal-prod",".modal-trigger-prod"));modalProd.init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
